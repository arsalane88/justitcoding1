/* Font Import */
@import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');

/* CSS Reset - Font -Family and Color Set */
* {
    margin: 0;
    padding: 0;
    font-family: 'Kanit', sans-serif;
    color: #fff;
}

/* Styling for grid-item divs to make alternating colours */
.container div {
    background-color: greenyellow;
    padding: 1em;
}

.container div:nth-child(even) {
    background-color: red;
}

/* CSS GRID CODE BELOW */
.container {
    display: grid;

    grid-template-columns: repeat(4, 1fr);

    grid-template-rows: 150px 320px 320px 150px;

    gap: 0.5em;

    /* grid-template-areas - allows us to define a key for how the
    rows and columns in our grid will be populated. Each word represents
    a space in our grid. We need to assign these values to elements
    within our grid using the grid-area property  */
    grid-template-areas:
        'header header header header'
        'main main main aside'
        'main main main section'
        'footer footer footer footer'
    ;
}

/* grid-area: allows us to define which areas on the grid-template-area
we wish for the element to take up. The value is the relevant keyword */
.header {
    grid-area: header;
}

.main {
    grid-area: main;
}

.aside {
    grid-area: aside;
}

.section {
    grid-area: section;
}

.footer {
    grid-area: footer;
}